From 90a9a03b6e4648f58fe73e2e53262e35aaf672e3 Mon Sep 17 00:00:00 2001
From: Mark Enriquez <enriquezmark36@gmail.com>
Date: Thu, 9 Jan 2020 20:47:02 +0800
Subject: [PATCH 15/23] hwcomposer: scx15 Update OverlayComposer once more

This uses the commit as the reference:
c38301268aa4580818aee0f5982a98ab77ee39ff (hwcomposer: sc8830: Import from sprd MM vendor)

What has changed seems to simplify the boundaries definition where
the rectangle's boundary doesn't have to be even (the '&' operation).
The Bug313521 fix seems to have been reverted.

Some EGL attributes have been explicitly specified, the bit width
for the RGB component is explicitly set to 8 and the
EGL_RENDERABLE_TYPE is set to EGL_OPENGL_ES_BIT (which is the default).

A broadcast() call from the sole Condition variable mCondition, is removed.
It doesn't seem to do anything.

The fall-over case in OverlayNativeWindow::queueBuffer has been refactored out.

NUM_FRAME_BUFFERS is now set to 3.

This also contains the typo fix by djeman on the OverlayComposer
regarding the IONBuffer variable.

Change-Id: I7eb1f950c9325dac9b422e895de8fd5864b6b42a
Signed-off-by: Mark Enriquez <enriquezmark36@gmail.com>
---
 hwcomposer/scx15/OverlayComposer/Layer.cpp    | 24 +++++++------------
 .../scx15/OverlayComposer/OverlayComposer.cpp |  4 ++++
 .../OverlayComposer/OverlayNativeWindow.cpp   |  7 ++++--
 .../OverlayComposer/OverlayNativeWindow.h     |  2 +-
 4 files changed, 18 insertions(+), 19 deletions(-)

diff --git a/hwcomposer/scx15/OverlayComposer/Layer.cpp b/hwcomposer/scx15/OverlayComposer/Layer.cpp
index 2bc58e5..7b39c5a 100644
--- a/hwcomposer/scx15/OverlayComposer/Layer.cpp
+++ b/hwcomposer/scx15/OverlayComposer/Layer.cpp
@@ -387,14 +387,10 @@ bool Layer::prepareDrawData()
 {
     sp<GraphicBuffer>& buf(mGFXBuffer);
 
-    /*Overlay play video is consistent  wtih GSP play video.
-     * Please refer to the SprdUtil.cpp
-     */
-    GLfloat left = GLfloat(mRect->left & 0xFFFFFFFE) / GLfloat(mPrivH->width);
-    GLfloat top = GLfloat(mRect->top & 0xFFFFFFFE) / GLfloat(mPrivH->height);
-    GLfloat right = GLfloat(mRect->right & 0xFFFFFFFE) / GLfloat(mPrivH->width);
-    /*Overlay play video maybe loss some accuracy,Bug313521*/
-    GLfloat bottom = GLfloat((mRect->bottom-1) & 0xFFFFFFFE) / GLfloat(mPrivH->height);
+    GLfloat left = GLfloat(mRect->left) / GLfloat(mPrivH->width);
+    GLfloat top = GLfloat(mRect->top) / GLfloat(mPrivH->height);
+    GLfloat right = GLfloat(mRect->right) / GLfloat(mPrivH->width);
+    GLfloat bottom = GLfloat(mRect->bottom) / GLfloat(mPrivH->height);
 
     texCoord[0].u = texCoord[1].u = left;
     texCoord[0].v = texCoord[3].v = top;
@@ -407,14 +403,10 @@ bool Layer::prepareDrawData()
     /*Overlay play video is consistent  wtih GSP play video.
      * Please refer to the SprdUtil.cpp
      */
-    left   = (GLfloat)(mRV->left & 0xFFFFFFFE);
-    if (mRV->top & 0x1) {
-        top = (GLfloat)(mRV->top + 1);
-    } else {
-        top = (GLfloat)(mRV->top);
-    }
-    right  = (GLfloat)(mRV->right & 0xFFFFFFFE);
-    bottom = (GLfloat)((mRV->bottom)& 0xFFFFFFFE);
+    left   = (GLfloat)(mRV->left);
+    top = (GLfloat)(mRV->top);
+    right  = (GLfloat)(mRV->right);
+    bottom = (GLfloat)(mRV->bottom);
 
     if (mTransform & NATIVE_WINDOW_TRANSFORM_FLIP_H) {
         GLfloat temp = left;
diff --git a/hwcomposer/scx15/OverlayComposer/OverlayComposer.cpp b/hwcomposer/scx15/OverlayComposer/OverlayComposer.cpp
index 34da402..091de1b 100644
--- a/hwcomposer/scx15/OverlayComposer/OverlayComposer.cpp
+++ b/hwcomposer/scx15/OverlayComposer/OverlayComposer.cpp
@@ -162,7 +162,11 @@ bool OverlayComposer::initEGL()
 
     // initialize EGL
     EGLint attribs[] = {
+            EGL_RENDERABLE_TYPE, EGL_OPENGL_ES_BIT,
             EGL_SURFACE_TYPE,       EGL_WINDOW_BIT,
+            EGL_RED_SIZE, 8,
+            EGL_GREEN_SIZE, 8,
+            EGL_BLUE_SIZE, 8,
             EGL_NONE,               0,
             EGL_NONE
     };
diff --git a/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.cpp b/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.cpp
index 97d9168..74364b2 100644
--- a/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.cpp
+++ b/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.cpp
@@ -119,7 +119,7 @@ int OverlayNativeWindow::dequeueBuffer(ANativeWindow* window,
     }
 
     private_handle_t* IONBuffer = self->mDisplayPlane->dequeueBuffer();
-    if (buffer == NULL)
+    if (IONBuffer == NULL)
     {
         ALOGE("Failed to get the Display plane buffer");
         return -1;
@@ -172,7 +172,6 @@ int OverlayNativeWindow::queueBuffer(ANativeWindow* window,
     const int index = self->mCurrentBufferIndex;
     self->front = static_cast<NativeBuffer*>(buffer);
     self->mNumFreeBuffers++;
-    self->mCondition.broadcast();
 
     queryDebugFlag(&mDebugFlag);
     ALOGI_IF(mDebugFlag, "OverlayNativeWindow::queueBuffer phy addr:%p", (void *)(((private_handle_t*)buffer->handle)->phyaddr));
@@ -236,10 +235,14 @@ int OverlayNativeWindow::query(const ANativeWindow* window,
             return NO_ERROR;
         case NATIVE_WINDOW_CONSUMER_RUNNING_BEHIND:
             *value = 0;
+            return NO_ERROR;
         case NATIVE_WINDOW_CONSUMER_USAGE_BITS:
             *value = GRALLOC_USAGE_HW_FB | GRALLOC_USAGE_HW_RENDER |
                      GRALLOC_USAGE_HW_COMPOSER | self->mWindowUsage;
             return NO_ERROR;
+        case NATIVE_WINDOW_MIN_UNDEQUEUED_BUFFERS:
+            *value = 1;
+            return NO_ERROR;
     }
     return BAD_VALUE;
 
diff --git a/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.h b/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.h
index 1f8727d..c4f553e 100644
--- a/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.h
+++ b/hwcomposer/scx15/OverlayComposer/OverlayNativeWindow.h
@@ -66,7 +66,7 @@ private:
 };
 
 
-#define NUM_FRAME_BUFFERS  2
+#define NUM_FRAME_BUFFERS  3
 
 
 class OverlayNativeWindow   //: public overlayNativeWindow
-- 
2.24.0

