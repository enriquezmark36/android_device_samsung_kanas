From 1068d91fc86e59d2b675836c7322ed045816ed0a Mon Sep 17 00:00:00 2001
From: Mark Enriquez <enriquezmark36@gmail.com>
Date: Mon, 13 Apr 2020 10:08:18 +0800
Subject: [PATCH 1/3] gralloc, hwcomposer: kanas: Allow DMA/CMA memory regions
 for HWC buffers

This should allow using the DEVICE_DIRECT_DISPLAY_SINGLE_OSD_LAYER
flag on the HWC when dealing with devices without IOMMU support.

The feature can be enabled by setting this on your BoardConfig.mk
TARGET_FORCE_HWC_CONTIG := true

WARNING: HWC may use a large amount of memory more than what is allowed in the
kernel, averaging about 15-22 MB total with 4 layers.
meaning a kernel patch may be required to increase the limits.

In kanas3g/kanas, the physical limit is about 256 MB.
Also, kanas3g/kanas initially uses 40MB although in a kernel patch this
should have been increased to about 96 MB.
(which includes the 1080p playback support).

Change-Id: I74e5bd50231d28f503501701a3b319ace0857a43
Signed-off-by: Mark Enriquez <enriquezmark36@gmail.com>
---
 gralloc/scx15/Android.mk       |  6 ++++++
 gralloc/scx15/alloc_device.cpp | 35 +++++++++++++++++++++++++++++++++-
 hwcomposer/scx15/Android.mk    |  8 +++++++-
 3 files changed, 47 insertions(+), 2 deletions(-)

diff --git a/gralloc/scx15/Android.mk b/gralloc/scx15/Android.mk
index 6baf568..f9239c9 100644
--- a/gralloc/scx15/Android.mk
+++ b/gralloc/scx15/Android.mk
@@ -81,6 +81,12 @@ LOCAL_CFLAGS += -DHIDL_INVALID_FD
 LOCAL_CFLAGS += -DHIDL_NO_FREE_FB
 endif
 
+# Tries to make HWC layer buffers be contiguous
+# will revert to virtual memory if it fails.
+ifeq ($(TARGET_FORCE_HWC_CONTIG), true)
+LOCAL_CFLAGS += -DFORCE_HWC_CONTIG
+endif
+
 ifeq ($(TARGET_USE_3_FRAMEBUFFER), true)
 LOCAL_CFLAGS += -DUSE_3_FRAMEBUFFER
 endif
diff --git a/gralloc/scx15/alloc_device.cpp b/gralloc/scx15/alloc_device.cpp
index 1916986..35ca9a9 100644
--- a/gralloc/scx15/alloc_device.cpp
+++ b/gralloc/scx15/alloc_device.cpp
@@ -263,6 +263,22 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
         {
             ion_heap_mask = ION_HEAP_ID_MASK_OVERLAY;
         }
+#ifdef FORCE_HWC_CONTIG
+        /*
+         * Addendum 1: When having a buffer for use with the HWComposer
+         * make sure it's always contiguous so that GSP can work its
+         * wonders.
+         *
+         * Addendum 3: HWC buffers are different from the GRALLOC_USAGE_OVERLAY_BUFFER
+         * SPRDHWC uses. HWC buffers handle all the layers sent to HWC which takes
+         * a lot of memory (15 MB overall average on 480x800).
+         * Thus, use the MM area which should be large enough.
+         */
+        else if (usage & GRALLOC_USAGE_HW_COMPOSER)
+        {
+            ion_heap_mask = ION_HEAP_ID_MASK_MM;
+        }
+#endif
         else
         {
             ion_heap_mask = ION_HEAP_ID_MASK_SYSTEM;
@@ -274,6 +290,22 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
         }
 
         ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
+#ifdef FORCE_HWC_CONTIG
+        /*
+         * Addendum 2: If the assumption on Addendum 1 fails, revert back to
+         * the virtual memory allocation (which not guaranteed to be contiguous).
+         * The components that depends on these usage bits should
+         * _NOT_ expect to always receive a contiguous memory.
+         */
+        if (ret && (usage & GRALLOC_USAGE_HW_COMPOSER) &&
+            !(usage & (GRALLOC_USAGE_VIDEO_BUFFER|GRALLOC_USAGE_CAMERA_BUFFER|GRALLOC_USAGE_OVERLAY_BUFFER))
+        ){
+            ALOGW("CMA allocation failed, using virtual memory allocation instead.");
+            ion_heap_mask = ION_HEAP_ID_MASK_SYSTEM;
+            ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
+        }
+#endif
+
         if ( ret != 0)
         {
             AERR("Failed to ion_alloc from ion_client:%d", m->ion_client);
@@ -301,7 +333,8 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
         hnd = new private_handle_t( private_handle_t::PRIV_FLAGS_USES_ION, usage, size, (int)cpu_ptr, private_handle_t::LOCK_STATE_MAPPED );
         if ( NULL != hnd )
         {
-            if(ion_heap_mask == ION_HEAP_CARVEOUT_MASK)
+            // Mark both MM and OVERLAY that are contiguously allocated
+            if ((ion_heap_mask == ION_HEAP_ID_MASK_MM) || (ion_heap_mask == ION_HEAP_ID_MASK_OVERLAY))
             {
                 hnd->flags=(private_handle_t::PRIV_FLAGS_USES_ION)|(private_handle_t::PRIV_FLAGS_USES_PHY);
             }
diff --git a/hwcomposer/scx15/Android.mk b/hwcomposer/scx15/Android.mk
index 51afd7b..e3cffce 100644
--- a/hwcomposer/scx15/Android.mk
+++ b/hwcomposer/scx15/Android.mk
@@ -100,10 +100,16 @@ endif
 ifeq ($(TARGET_BOARD_PLATFORM),sc8830)
 DEVICE_USE_FB_HW_VSYNC := true
 
-# Kanas/kanas3g doesn't have this flag
+# Kanas/kanas3g doesn't have IOMMU so this wouldn't work.
+# Unless, the HWC buffers are physically contiguous.
+# Pardon the duplication.
 ifneq ($(strip $(SOC_SCX35)),true)
 DEVICE_DIRECT_DISPLAY_SINGLE_OSD_LAYER := true
 endif
+ifeq ($(TARGET_FORCE_HWC_CONTIG), true)
+DEVICE_DIRECT_DISPLAY_SINGLE_OSD_LAYER := true
+endif
+
 endif
 
 ifeq ($(TARGET_BOARD_PLATFORM),scx15)
-- 
2.25.0

