From 3119be1b16f2749c1d46201eeabbc541fe7c0e3e Mon Sep 17 00:00:00 2001
From: Mark Enriquez <enriquezmark36@gmail.com>
Date: Thu, 6 Aug 2020 20:37:26 +0800
Subject: [PATCH 4/4] gralloc: scx15: Revert support for an extra heap; No
 fallbacks for OVERLAY Carveout

On the version 2 of the kernel patchset, the fallback mechanism is now
implemented on the kernel rather on the gralloc library. This helps
considering that some apps go through libion for allocations.

What was implemented for the extra heap is that it just adds some explicit fallback
which was also implemented on the kernel so there goes the dangerous flag
to the window.

Change-Id: I6733c90511f68dd15b1a0a048b3e55f2c394dd5b
Signed-off-by: Mark Enriquez <enriquezmark36@gmail.com>
---
 gralloc/scx15/Android.mk       | 22 ----------------------
 gralloc/scx15/alloc_device.cpp | 33 +--------------------------------
 2 files changed, 1 insertion(+), 54 deletions(-)

diff --git a/gralloc/scx15/Android.mk b/gralloc/scx15/Android.mk
index 0c2ae86..5bb8dbc 100644
--- a/gralloc/scx15/Android.mk
+++ b/gralloc/scx15/Android.mk
@@ -101,33 +101,11 @@ LOCAL_CFLAGS += -DFORCE_HWC_CONTIG
 # This tweaks the logic a bit and forces all GRALLOC_USAGE_OVERLAY_BUFFER
 # to MM and all HWC buffer to the carveout.
 #
-# Will also enable TARGET_ION_MM_FALLBACK if not set so that the OVERLAY will act
-# as a fallback buffer when an MM allocation fails.
-#
 # Lastly, when allocation for the HWC fail, it will be retried on MM.
 # Only when it fails again, then it falls back to virtual memory allocation.
 ifeq ($(TARGET_ION_OVERLAY_IS_CARVEOUT), true)
 LOCAL_CFLAGS += -DION_OVERLAY_IS_CARVEOUT
-
-	# Set TARGET_ION_MM_FALLBACK to true if not set
-	ifeq ($(TARGET_ION_MM_FALLBACK), )
-	TARGET_ION_MM_FALLBACK := true
-	endif
-endif
 endif
-
-# When allocation fails under ION_HEAP_ID_MASK_MM, retry again
-# under ION_HEAP_ID_MASK_OVERLAY supposing the two are in two
-# separate memory pools.
-ifeq ($(TARGET_ION_MM_FALLBACK), true)
-LOCAL_CFLAGS += -DALLOW_MM_FALLBACK
-endif
-
-# Indicates that the kernel has an extra ION carveout at mask 0x16
-# and can be used to retry failed allocations.
-# WARNING: The kernel MUST have that extra carveout or it may cause problems.
-ifeq ($(TARGET_HAS_RESERVED_CARVEOUT), true)
-LOCAL_CFLAGS += -DKERNEL_HAS_RESERVED_CARVEOUT
 endif
 
 # Make Gralloc assume the FB have 3 screen buffers (triple buffers)
diff --git a/gralloc/scx15/alloc_device.cpp b/gralloc/scx15/alloc_device.cpp
index 7c3d200..7d730bc 100644
--- a/gralloc/scx15/alloc_device.cpp
+++ b/gralloc/scx15/alloc_device.cpp
@@ -308,18 +308,6 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
 
         ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
 
-#if defined(ALLOW_MM_FALLBACK)
-         /*
-          * Addendum 6: Retry failed allocations from MM in Overlay.
-          * Suppose OVERLAY and MM is separate, try to borrow memory in OVERLAY.
-          */
-        if (ret && (usage & (GRALLOC_USAGE_VIDEO_BUFFER|GRALLOC_USAGE_CAMERA_BUFFER))){
-            ALOGW("Cannot allocate in ION MM, falling back to OVERLAY");
-            ion_heap_mask = ION_HEAP_ID_MASK_OVERLAY;
-            ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
-        }
-#endif
-
 #ifdef FORCE_HWC_CONTIG
         /*
          * Addendum 2: If the assumption on Addendum 1 fails, revert back to
@@ -331,7 +319,7 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
             !(usage & (GRALLOC_USAGE_VIDEO_BUFFER|GRALLOC_USAGE_CAMERA_BUFFER|GRALLOC_USAGE_OVERLAY_BUFFER))
         ){
 
-#if defined(ALLOW_MM_FALLBACK)
+#if defined(ION_OVERLAY_IS_CARVEOUT)
             ALOGW("HWC buffer allocation failed, falling back to MM");
             ion_heap_mask = ION_HEAP_ID_MASK_MM;
             ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
@@ -345,25 +333,6 @@ static int gralloc_alloc_buffer(alloc_device_t* dev, size_t size, int usage, buf
         }
 #endif
 
-#ifdef KERNEL_HAS_RESERVED_CARVEOUT
-        /*
-         * Addendum 4: It's possible that even with the page migration powers of CMA
-         * or in low memory conditions, an allocation is not possible. This is
-         * often the case when allocating megabytes of physically contiguous
-         * memory like a 5MP camera buffer -- 1.5*5*10^6 (~7.15MB)
-         * or a video decoder buffer for 1080p videos. (~2.9MB).
-         *
-         * GRALLOC_USAGE_HW_COMPOSER should _NOT_ be given another chance nor
-         * GRALLOC_USAGE_OVERLAY_BUFFER.
-         */
-        if (ret && (usage & (GRALLOC_USAGE_VIDEO_BUFFER|GRALLOC_USAGE_CAMERA_BUFFER)))
-        {
-            ALOGW("Allocation failed, Trying to use the reserved carveout.");
-            ion_heap_mask = ION_HEAP_ID_MASK_RESERVED;
-            ret = ion_alloc(m->ion_client, size, 0, ion_heap_mask, ion_flag, &ion_hnd);
-        }
-#endif
-
         if ( ret != 0)
         {
             AERR("Failed to ion_alloc from ion_client:%d", m->ion_client);
-- 
2.28.0

