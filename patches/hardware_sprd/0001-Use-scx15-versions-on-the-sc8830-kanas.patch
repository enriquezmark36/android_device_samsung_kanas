From 5038a7f861c0078f71862a080902b645d6d1fb11 Mon Sep 17 00:00:00 2001
From: Mark Enriquez <enriquezmark36@gmail.com>
Date: Mon, 25 Jun 2018 10:14:08 +0800
Subject: [PATCH] Use scx15 versions on the sc8830 kanas

Signed-off-by: Mark Enriquez <enriquezmark36@gmail.com>
---
 hwcomposer/scx15/Android.mk                   |  20 +-
 hwcomposer/scx15/sc8830/Android.mk            |  15 +-
 libcamera/scx15/Camera.mk                     |  28 +--
 libcamera/scx15/Camera2.mk                    |  28 +--
 libcamera/scx15/Camera_Utest.mk               |  29 +--
 libcamera/scx15/Camera_Utest2.mk              |  29 +--
 libion_sprd/scx15/Android.mk                  |  34 ++-
 .../scx15/kernel-headers/kanas/linux/ion.h    | 204 ++++++++++++++++++
 libmemoryheapion/scx15/Android.mk             |  15 +-
 libmemoryheapion/scx15/MemoryHeapIon.cpp      |   2 +-
 libmemoryheapion/scx15/MemoryHeapIon.h        |   2 +-
 .../scx15/kernel-headers/linux/ion.h          | 204 ++++++++++++++++++
 .../scx15/kernel-headers/video/ion_sprd.h     |  99 +++++++++
 libstagefrighthw/scx15/Android.mk             |  18 +-
 omx_components/video/avc_sprd/Android.mk      |   2 -
 .../video/avc_sprd/sc8830/dec/Android.mk      |  25 +--
 .../avc_sprd/sc8830/dec/SPRDAVCDecoder.cpp    |   6 +-
 .../video/avc_sprd/sc8830/dec/avc_dec_api.h   |   6 +
 .../video/avc_sprd/scx15/enc/Android.mk       |  21 +-
 .../video/m4v_h263_sprd/sc8830/dec/Android.mk |  24 +--
 .../sc8830/dec/SPRDMPEG4Decoder.cpp           |   4 +
 .../video/m4v_h263_sprd/sc8830/enc/Android.mk |   4 +
 .../sc8830/enc/SPRDMPEG4Encoder.cpp           |   4 +
 .../sc8830/enc/m4v_h263_enc_api.h             |   7 +-
 .../video/vpx_sprd/sc8830/dec/Android.mk      |  23 +-
 25 files changed, 659 insertions(+), 194 deletions(-)
 create mode 100644 libion_sprd/scx15/kernel-headers/kanas/linux/ion.h
 create mode 100644 libmemoryheapion/scx15/kernel-headers/linux/ion.h
 create mode 100644 libmemoryheapion/scx15/kernel-headers/video/ion_sprd.h

diff --git a/hwcomposer/scx15/Android.mk b/hwcomposer/scx15/Android.mk
index bb0827a..d909f14 100644
--- a/hwcomposer/scx15/Android.mk
+++ b/hwcomposer/scx15/Android.mk
@@ -56,20 +56,19 @@ LOCAL_SRC_FILES := \
 	SprdUtil.cpp \
 	dump.cpp \
 
+# Use scx15 for kanas/kanas3g
 ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
-	$(LOCAL_PATH)/../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/
-
+	$(LOCAL_PATH)/../../gralloc/scx15
 else
-
 LOCAL_C_INCLUDES := \
+	$(LOCAL_PATH)/../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
+
+LOCAL_C_INCLUDES += \
 	$(LOCAL_PATH)/../../gralloc/$(TARGET_BOARD_PLATFORM) \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/
-endif
 
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
@@ -93,12 +92,11 @@ DEVICE_OVERLAYPLANE_BORROW_PRIMARYPLANE_BUFFER := true
 endif
 
 ifeq ($(TARGET_BOARD_PLATFORM),sc8830)
-
-ifeq ($(strip $(SOC_SCX35)),true)
 DEVICE_USE_FB_HW_VSYNC := true
-else
+
+# Kanas/kanas3g doesn't have this flag
+ifneq ($(strip $(SOC_SCX35)),true)
 DEVICE_DIRECT_DISPLAY_SINGLE_OSD_LAYER := true
-DEVICE_USE_FB_HW_VSYNC := true
 endif
 endif
 
diff --git a/hwcomposer/scx15/sc8830/Android.mk b/hwcomposer/scx15/sc8830/Android.mk
index 94ff16d..88925c1 100755
--- a/hwcomposer/scx15/sc8830/Android.mk
+++ b/hwcomposer/scx15/sc8830/Android.mk
@@ -35,24 +35,21 @@ LOCAL_SHARED_LIBRARIES := liblog
 LOCAL_SRC_FILES := \
 	gsp_hal.cpp \
 
-ifeq ($(strip $(SOC_SCX35)),true)
 
+# Force scx15 on kanas/kanas3g
+ifeq ($(strip $(SOC_SCX35)),true)
 LOCAL_C_INCLUDES += \
-	$(LOCAL_PATH)/../../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/ \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/ \
-
+	$(LOCAL_PATH)/../../../gralloc/scx15
 else
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
 
 LOCAL_C_INCLUDES += \
-	$(LOCAL_PATH)/../../../gralloc/$(TARGET_BOARD_PLATFORM) \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/ \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/ \
 
-endif
-
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr \
 
diff --git a/libcamera/scx15/Camera.mk b/libcamera/scx15/Camera.mk
index d67bb0f..6e8e035 100644
--- a/libcamera/scx15/Camera.mk
+++ b/libcamera/scx15/Camera.mk
@@ -13,7 +13,6 @@ endif
 
 ifeq ($(strip $(sc8830like)),1)
 
-ifeq ($(strip $(SOC_SCX35)),true)
 LOCAL_C_INCLUDES := \
 	$(LOCAL_PATH)/vsp/sc8830/inc	\
 	$(LOCAL_PATH)/vsp/sc8830/src \
@@ -28,28 +27,15 @@ LOCAL_C_INCLUDES := \
         external/jhead \
         external/sqlite/dist \
 	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/scx15 \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video
 
+# kanas/kanas3g uses the scx15 version
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/scx15
 else
-
-LOCAL_C_INCLUDES := \
-	$(LOCAL_PATH)/vsp/sc8830/inc	\
-	$(LOCAL_PATH)/vsp/sc8830/src \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/inc \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/src \
-	$(LOCAL_PATH)/sc8830/inc \
-	$(LOCAL_PATH)/sc8830/isp_calibration/inc \
-	$(LOCAL_PATH)/sensor_drv_u/inc \
-	$(LOCAL_PATH)/isp/inc \
-	external/skia/include/images \
-	external/skia/include/core\
-        external/jhead \
-        external/sqlite/dist \
-	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM) \
-
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM)
 endif
 
 LOCAL_ADDITIONAL_DEPENDENCIES += \
diff --git a/libcamera/scx15/Camera2.mk b/libcamera/scx15/Camera2.mk
index 22b0c83..b22211e 100644
--- a/libcamera/scx15/Camera2.mk
+++ b/libcamera/scx15/Camera2.mk
@@ -13,7 +13,6 @@ endif
 
 ifeq ($(strip $(sc8830like)),1)
 
-ifeq ($(strip $(SOC_SCX35)),true)
 LOCAL_C_INCLUDES := \
 	$(LOCAL_PATH)/vsp/sc8830/inc	\
 	$(LOCAL_PATH)/vsp/sc8830/src \
@@ -28,28 +27,15 @@ LOCAL_C_INCLUDES := \
         external/jhead \
         external/sqlite/dist \
 	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/scx15 \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video
 
+# Again, kanas/kanas3g uses the scx15 despite being tagged as sc8830
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/scx15
 else
-
-LOCAL_C_INCLUDES := \
-	$(LOCAL_PATH)/vsp/sc8830/inc	\
-	$(LOCAL_PATH)/vsp/sc8830/src \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/inc \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/src \
-	$(LOCAL_PATH)/sc8830/inc \
-	$(LOCAL_PATH)/sc8830/isp_calibration/inc \
-	$(LOCAL_PATH)/sensor_drv_u/inc \
-	$(LOCAL_PATH)/isp/inc \
-	external/skia/include/images \
-	external/skia/include/core\
-        external/jhead \
-        external/sqlite/dist \
-	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM) \
-
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM)
 endif
 
 LOCAL_ADDITIONAL_DEPENDENCIES += \
diff --git a/libcamera/scx15/Camera_Utest.mk b/libcamera/scx15/Camera_Utest.mk
index bffe743..47cf60b 100644
--- a/libcamera/scx15/Camera_Utest.mk
+++ b/libcamera/scx15/Camera_Utest.mk
@@ -13,8 +13,6 @@ endif
 
 ifeq ($(strip $(sc8830like)),1)
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	$(LOCAL_PATH)/vsp/sc8830/inc	\
 	$(LOCAL_PATH)/vsp/sc8830/src \
@@ -29,28 +27,15 @@ LOCAL_C_INCLUDES := \
         external/jhead \
         external/sqlite/dist \
 	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/scx15 \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video
 
+# Force scx15 for kanas
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/scx15
 else
-
-LOCAL_C_INCLUDES := \
-	$(LOCAL_PATH)/vsp/sc8830/inc	\
-	$(LOCAL_PATH)/vsp/sc8830/src \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/inc \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/src \
-	$(LOCAL_PATH)/sc8830/inc \
-	$(LOCAL_PATH)/sensor_drv_u/inc \
-	$(LOCAL_PATH)/isp/inc \
-	$(LOCAL_PATH)/sc8830/isp_calibration/inc \
-	external/skia/include/images \
-	external/skia/include/core\
-        external/jhead \
-        external/sqlite/dist \
-	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM) \
-
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM)
 endif
 
 LOCAL_SRC_FILES:= \
diff --git a/libcamera/scx15/Camera_Utest2.mk b/libcamera/scx15/Camera_Utest2.mk
index 8847b6f..facac06 100644
--- a/libcamera/scx15/Camera_Utest2.mk
+++ b/libcamera/scx15/Camera_Utest2.mk
@@ -13,8 +13,6 @@ endif
 
 ifeq ($(strip $(sc8830like)),1)
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	$(LOCAL_PATH)/vsp/sc8830/inc	\
 	$(LOCAL_PATH)/vsp/sc8830/src \
@@ -29,28 +27,15 @@ LOCAL_C_INCLUDES := \
         external/jhead \
         external/sqlite/dist \
 	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/scx15 \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video
 
+# Force scx15 version for kanas/kanas3g
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/scx15
 else
-
-LOCAL_C_INCLUDES := \
-	$(LOCAL_PATH)/vsp/sc8830/inc	\
-	$(LOCAL_PATH)/vsp/sc8830/src \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/inc \
-	$(LOCAL_PATH)/jpeg/jpeg_fw_8830/src \
-	$(LOCAL_PATH)/sc8830/inc \
-	$(LOCAL_PATH)/sensor_drv_u/inc \
-	$(LOCAL_PATH)/isp/inc \
-	$(LOCAL_PATH)/sc8830/isp_calibration/inc \
-	external/skia/include/images \
-	external/skia/include/core\
-        external/jhead \
-        external/sqlite/dist \
-	system/media/camera/include \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/source/include/video \
-	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM) \
-
+LOCAL_C_INCLUDES += \
+	hardware/sprd/gralloc/$(TARGET_BOARD_PLATFORM)
 endif
 
 LOCAL_ADDITIONAL_DEPENDENCIES += \
diff --git a/libion_sprd/scx15/Android.mk b/libion_sprd/scx15/Android.mk
index 7bd637b..5ed31d6 100644
--- a/libion_sprd/scx15/Android.mk
+++ b/libion_sprd/scx15/Android.mk
@@ -21,16 +21,25 @@ include $(CLEAR_VARS)
 
 LOCAL_MODULE := libion_sprd
 
-LOCAL_ADDITIONAL_DEPENDENCIES += \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
-
 LOCAL_C_INCLUDES += \
 	$(LOCAL_PATH)/include \
 	$(LOCAL_PATH)/kernel-headers \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include \
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
-	$(LOCAL_C_INCLUDES) \
+	$(LOCAL_C_INCLUDES)
+
+# Force this specific version of ion.h for compilation
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/kernel-headers/kanas
+else
+LOCAL_C_INCLUDES += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include
+LOCAL_EXPORT_C_INCLUDE_DIRS += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include
+LOCAL_ADDITIONAL_DEPENDENCIES += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
+endif
 
 LOCAL_SRC_FILES := \
 	ion.c
@@ -51,13 +60,20 @@ include $(CLEAR_VARS)
 
 LOCAL_MODULE := iontest_sprd
 
-LOCAL_ADDITIONAL_DEPENDENCIES += \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
-
 LOCAL_C_INCLUDES += \
 	$(LOCAL_PATH)/include \
 	$(LOCAL_PATH)/kernel-headers \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include
+
+# Force this specific version of ion.h
+# There are some different versions of ion.h, e.g Google's common kernel source
+# For now, this only has been tested on kanas.
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += $(LOCAL_PATH)/kernel-headers/kanas
+else
+LOCAL_C_INCLUDES += $(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include
+LOCAL_ADDITIONAL_DEPENDENCIES += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
+endif
 
 LOCAL_SRC_FILES := \
 	ion.c \
diff --git a/libion_sprd/scx15/kernel-headers/kanas/linux/ion.h b/libion_sprd/scx15/kernel-headers/kanas/linux/ion.h
new file mode 100644
index 0000000..bc04d1d
--- /dev/null
+++ b/libion_sprd/scx15/kernel-headers/kanas/linux/ion.h
@@ -0,0 +1,204 @@
+/*
+ * include/linux/ion.h
+ *
+ * Copyright (C) 2011 Google, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#ifndef _LINUX_ION_H
+#define _LINUX_ION_H
+
+#include <linux/types.h>
+
+/**
+ * enum ion_heap_types - list of all possible types of heaps
+ * @ION_HEAP_TYPE_SYSTEM:	 memory allocated via vmalloc
+ * @ION_HEAP_TYPE_SYSTEM_CONTIG: memory allocated via kmalloc
+ * @ION_HEAP_TYPE_CARVEOUT:	 memory allocated from a prereserved
+ * 				 carveout heap, allocations are physically
+ * 				 contiguous
+ * @ION_HEAP_TYPE_DMA:		 memory allocated via DMA API
+ * @ION_NUM_HEAPS:		 helper for iterating over heaps, a bit mask
+ * 				 is used to identify the heaps, so only 32
+ * 				 total heap types are supported
+ */
+enum ion_heap_type {
+	ION_HEAP_TYPE_SYSTEM,
+	ION_HEAP_TYPE_SYSTEM_CONTIG,
+	ION_HEAP_TYPE_CARVEOUT,
+	ION_HEAP_TYPE_CHUNK,
+	ION_HEAP_TYPE_DMA,
+	ION_HEAP_TYPE_CUSTOM, /* must be last so device specific heaps always
+				 are at the end of this enum */
+	ION_NUM_HEAPS = 16,
+};
+
+#define ION_HEAP_SYSTEM_MASK		(1 << ION_HEAP_TYPE_SYSTEM)
+#define ION_HEAP_SYSTEM_CONTIG_MASK	(1 << ION_HEAP_TYPE_SYSTEM_CONTIG)
+#define ION_HEAP_CARVEOUT_MASK		(1 << ION_HEAP_TYPE_CARVEOUT)
+#define ION_HEAP_TYPE_DMA_MASK		(1 << ION_HEAP_TYPE_DMA)
+
+#define ION_NUM_HEAP_IDS		sizeof(unsigned int) * 8
+
+/**
+ * allocation flags - the lower 16 bits are used by core ion, the upper 16
+ * bits are reserved for use by the heaps themselves.
+ */
+#define ION_FLAG_CACHED 1		/* mappings of this buffer should be
+					   cached, ion will do cache
+					   maintenance when the buffer is
+					   mapped for dma */
+#define ION_FLAG_CACHED_NEEDS_SYNC 2	/* mappings of this buffer will created
+					   at mmap time, if this is set
+					   caches must be managed manually */
+
+
+/**
+ * DOC: Ion Userspace API
+ *
+ * create a client by opening /dev/ion
+ * most operations handled via following ioctls
+ *
+ */
+
+/**
+ * struct ion_allocation_data - metadata passed from userspace for allocations
+ * @len:		size of the allocation
+ * @align:		required alignment of the allocation
+ * @heap_id_mask:	mask of heap ids to allocate from
+ * @flags:		flags passed to heap
+ * @handle:		pointer that will be populated with a cookie to use to 
+ *			refer to this allocation
+ *
+ * Provided by userspace as an argument to the ioctl
+ */
+struct ion_allocation_data {
+	size_t len;
+	size_t align;
+	unsigned int heap_mask;
+	unsigned int flags;
+	struct ion_handle *handle;
+};
+
+/**
+ * struct ion_fd_data - metadata passed to/from userspace for a handle/fd pair
+ * @handle:	a handle
+ * @fd:		a file descriptor representing that handle
+ *
+ * For ION_IOC_SHARE or ION_IOC_MAP userspace populates the handle field with
+ * the handle returned from ion alloc, and the kernel returns the file
+ * descriptor to share or map in the fd field.  For ION_IOC_IMPORT, userspace
+ * provides the file descriptor and the kernel returns the handle.
+ */
+struct ion_fd_data {
+	struct ion_handle *handle;
+	int fd;
+};
+
+/**
+ * struct ion_handle_data - a handle passed to/from the kernel
+ * @handle:	a handle
+ */
+struct ion_handle_data {
+	struct ion_handle *handle;
+};
+
+/**
+ * struct ion_custom_data - metadata passed to/from userspace for a custom ioctl
+ * @cmd:	the custom ioctl function to call
+ * @arg:	additional data to pass to the custom ioctl, typically a user
+ *		pointer to a predefined structure
+ *
+ * This works just like the regular cmd and arg fields of an ioctl.
+ */
+struct ion_custom_data {
+	unsigned int cmd;
+	unsigned long arg;
+};
+
+#define ION_IOC_MAGIC		'I'
+
+/**
+ * DOC: ION_IOC_ALLOC - allocate memory
+ *
+ * Takes an ion_allocation_data struct and returns it with the handle field
+ * populated with the opaque handle for the allocation.
+ */
+#define ION_IOC_ALLOC		_IOWR(ION_IOC_MAGIC, 0, \
+				      struct ion_allocation_data)
+
+/**
+ * DOC: ION_IOC_FREE - free memory
+ *
+ * Takes an ion_handle_data struct and frees the handle.
+ */
+#define ION_IOC_FREE		_IOWR(ION_IOC_MAGIC, 1, struct ion_handle_data)
+
+/**
+ * DOC: ION_IOC_MAP - get a file descriptor to mmap
+ *
+ * Takes an ion_fd_data struct with the handle field populated with a valid
+ * opaque handle.  Returns the struct with the fd field set to a file
+ * descriptor open in the current address space.  This file descriptor
+ * can then be used as an argument to mmap.
+ */
+#define ION_IOC_MAP		_IOWR(ION_IOC_MAGIC, 2, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_SHARE - creates a file descriptor to use to share an allocation
+ *
+ * Takes an ion_fd_data struct with the handle field populated with a valid
+ * opaque handle.  Returns the struct with the fd field set to a file
+ * descriptor open in the current address space.  This file descriptor
+ * can then be passed to another process.  The corresponding opaque handle can
+ * be retrieved via ION_IOC_IMPORT.
+ */
+#define ION_IOC_SHARE		_IOWR(ION_IOC_MAGIC, 4, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_IMPORT - imports a shared file descriptor
+ *
+ * Takes an ion_fd_data struct with the fd field populated with a valid file
+ * descriptor obtained from ION_IOC_SHARE and returns the struct with the handle
+ * filed set to the corresponding opaque handle.
+ */
+#define ION_IOC_IMPORT		_IOWR(ION_IOC_MAGIC, 5, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_INVALIDATE - invalidate a shared file descriptors
+ *
+ * Deprecated in favor of using the dma_buf api's correctly (syncing
+ * will happend automatically when the buffer is mapped to a device).
+ * If necessary should be used after touching a cached buffer from the cpu,
+ * this will make the buffer in memory coherent.
+ */
+#define ION_IOC_INVALIDATE		_IOWR(ION_IOC_MAGIC, 8, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_SYNC - syncs a shared file descriptors to memory
+ *
+ * Deprecated in favor of using the dma_buf api's correctly (syncing
+ * will happend automatically when the buffer is mapped to a device).
+ * If necessary should be used after touching a cached buffer from the cpu,
+ * this will make the buffer in memory coherent.
+ */
+#define ION_IOC_SYNC		_IOWR(ION_IOC_MAGIC, 7, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_CUSTOM - call architecture specific ion ioctl
+ *
+ * Takes the argument of the architecture specific ioctl to call and
+ * passes appropriate userdata for that ioctl
+ */
+#define ION_IOC_CUSTOM		_IOWR(ION_IOC_MAGIC, 6, struct ion_custom_data)
+
+#endif /* _LINUX_ION_H */
diff --git a/libmemoryheapion/scx15/Android.mk b/libmemoryheapion/scx15/Android.mk
index e298894..8ab35fc 100644
--- a/libmemoryheapion/scx15/Android.mk
+++ b/libmemoryheapion/scx15/Android.mk
@@ -24,14 +24,19 @@ LOCAL_MODULE := libmemoryheapion
 LOCAL_SRC_FILES := \
 	MemoryHeapIon.cpp
 
-LOCAL_ADDITIONAL_DEPENDENCIES += \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
+LOCAL_EXPORT_C_INCLUDE_DIRS := \
+	$(LOCAL_PATH)/ \
 
+# Force this specific version of ion.h for compilation
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/kernel-headers/
+else
 LOCAL_C_INCLUDES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include
-
-LOCAL_EXPORT_C_INCLUDE_DIRS := \
-	$(LOCAL_PATH)/ \
+LOCAL_ADDITIONAL_DEPENDENCIES += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
+endif
 
 LOCAL_SHARED_LIBRARIES := \
 	libbinder \
diff --git a/libmemoryheapion/scx15/MemoryHeapIon.cpp b/libmemoryheapion/scx15/MemoryHeapIon.cpp
index 42f13b9..610aecb 100644
--- a/libmemoryheapion/scx15/MemoryHeapIon.cpp
+++ b/libmemoryheapion/scx15/MemoryHeapIon.cpp
@@ -498,4 +498,4 @@ MemoryHeapIon::~MemoryHeapIon()
 }
 
 // ---------------------------------------------------------------------------
-}; // namespace android
\ No newline at end of file
+}; // namespace android
diff --git a/libmemoryheapion/scx15/MemoryHeapIon.h b/libmemoryheapion/scx15/MemoryHeapIon.h
index 2cb8181..3e155f4 100644
--- a/libmemoryheapion/scx15/MemoryHeapIon.h
+++ b/libmemoryheapion/scx15/MemoryHeapIon.h
@@ -68,4 +68,4 @@ private:
 // ---------------------------------------------------------------------------
 }; // namespace android
 
-#endif // ANDROID_MEMORY_HEAP_ION_H
\ No newline at end of file
+#endif // ANDROID_MEMORY_HEAP_ION_H
diff --git a/libmemoryheapion/scx15/kernel-headers/linux/ion.h b/libmemoryheapion/scx15/kernel-headers/linux/ion.h
new file mode 100644
index 0000000..bc04d1d
--- /dev/null
+++ b/libmemoryheapion/scx15/kernel-headers/linux/ion.h
@@ -0,0 +1,204 @@
+/*
+ * include/linux/ion.h
+ *
+ * Copyright (C) 2011 Google, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#ifndef _LINUX_ION_H
+#define _LINUX_ION_H
+
+#include <linux/types.h>
+
+/**
+ * enum ion_heap_types - list of all possible types of heaps
+ * @ION_HEAP_TYPE_SYSTEM:	 memory allocated via vmalloc
+ * @ION_HEAP_TYPE_SYSTEM_CONTIG: memory allocated via kmalloc
+ * @ION_HEAP_TYPE_CARVEOUT:	 memory allocated from a prereserved
+ * 				 carveout heap, allocations are physically
+ * 				 contiguous
+ * @ION_HEAP_TYPE_DMA:		 memory allocated via DMA API
+ * @ION_NUM_HEAPS:		 helper for iterating over heaps, a bit mask
+ * 				 is used to identify the heaps, so only 32
+ * 				 total heap types are supported
+ */
+enum ion_heap_type {
+	ION_HEAP_TYPE_SYSTEM,
+	ION_HEAP_TYPE_SYSTEM_CONTIG,
+	ION_HEAP_TYPE_CARVEOUT,
+	ION_HEAP_TYPE_CHUNK,
+	ION_HEAP_TYPE_DMA,
+	ION_HEAP_TYPE_CUSTOM, /* must be last so device specific heaps always
+				 are at the end of this enum */
+	ION_NUM_HEAPS = 16,
+};
+
+#define ION_HEAP_SYSTEM_MASK		(1 << ION_HEAP_TYPE_SYSTEM)
+#define ION_HEAP_SYSTEM_CONTIG_MASK	(1 << ION_HEAP_TYPE_SYSTEM_CONTIG)
+#define ION_HEAP_CARVEOUT_MASK		(1 << ION_HEAP_TYPE_CARVEOUT)
+#define ION_HEAP_TYPE_DMA_MASK		(1 << ION_HEAP_TYPE_DMA)
+
+#define ION_NUM_HEAP_IDS		sizeof(unsigned int) * 8
+
+/**
+ * allocation flags - the lower 16 bits are used by core ion, the upper 16
+ * bits are reserved for use by the heaps themselves.
+ */
+#define ION_FLAG_CACHED 1		/* mappings of this buffer should be
+					   cached, ion will do cache
+					   maintenance when the buffer is
+					   mapped for dma */
+#define ION_FLAG_CACHED_NEEDS_SYNC 2	/* mappings of this buffer will created
+					   at mmap time, if this is set
+					   caches must be managed manually */
+
+
+/**
+ * DOC: Ion Userspace API
+ *
+ * create a client by opening /dev/ion
+ * most operations handled via following ioctls
+ *
+ */
+
+/**
+ * struct ion_allocation_data - metadata passed from userspace for allocations
+ * @len:		size of the allocation
+ * @align:		required alignment of the allocation
+ * @heap_id_mask:	mask of heap ids to allocate from
+ * @flags:		flags passed to heap
+ * @handle:		pointer that will be populated with a cookie to use to 
+ *			refer to this allocation
+ *
+ * Provided by userspace as an argument to the ioctl
+ */
+struct ion_allocation_data {
+	size_t len;
+	size_t align;
+	unsigned int heap_mask;
+	unsigned int flags;
+	struct ion_handle *handle;
+};
+
+/**
+ * struct ion_fd_data - metadata passed to/from userspace for a handle/fd pair
+ * @handle:	a handle
+ * @fd:		a file descriptor representing that handle
+ *
+ * For ION_IOC_SHARE or ION_IOC_MAP userspace populates the handle field with
+ * the handle returned from ion alloc, and the kernel returns the file
+ * descriptor to share or map in the fd field.  For ION_IOC_IMPORT, userspace
+ * provides the file descriptor and the kernel returns the handle.
+ */
+struct ion_fd_data {
+	struct ion_handle *handle;
+	int fd;
+};
+
+/**
+ * struct ion_handle_data - a handle passed to/from the kernel
+ * @handle:	a handle
+ */
+struct ion_handle_data {
+	struct ion_handle *handle;
+};
+
+/**
+ * struct ion_custom_data - metadata passed to/from userspace for a custom ioctl
+ * @cmd:	the custom ioctl function to call
+ * @arg:	additional data to pass to the custom ioctl, typically a user
+ *		pointer to a predefined structure
+ *
+ * This works just like the regular cmd and arg fields of an ioctl.
+ */
+struct ion_custom_data {
+	unsigned int cmd;
+	unsigned long arg;
+};
+
+#define ION_IOC_MAGIC		'I'
+
+/**
+ * DOC: ION_IOC_ALLOC - allocate memory
+ *
+ * Takes an ion_allocation_data struct and returns it with the handle field
+ * populated with the opaque handle for the allocation.
+ */
+#define ION_IOC_ALLOC		_IOWR(ION_IOC_MAGIC, 0, \
+				      struct ion_allocation_data)
+
+/**
+ * DOC: ION_IOC_FREE - free memory
+ *
+ * Takes an ion_handle_data struct and frees the handle.
+ */
+#define ION_IOC_FREE		_IOWR(ION_IOC_MAGIC, 1, struct ion_handle_data)
+
+/**
+ * DOC: ION_IOC_MAP - get a file descriptor to mmap
+ *
+ * Takes an ion_fd_data struct with the handle field populated with a valid
+ * opaque handle.  Returns the struct with the fd field set to a file
+ * descriptor open in the current address space.  This file descriptor
+ * can then be used as an argument to mmap.
+ */
+#define ION_IOC_MAP		_IOWR(ION_IOC_MAGIC, 2, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_SHARE - creates a file descriptor to use to share an allocation
+ *
+ * Takes an ion_fd_data struct with the handle field populated with a valid
+ * opaque handle.  Returns the struct with the fd field set to a file
+ * descriptor open in the current address space.  This file descriptor
+ * can then be passed to another process.  The corresponding opaque handle can
+ * be retrieved via ION_IOC_IMPORT.
+ */
+#define ION_IOC_SHARE		_IOWR(ION_IOC_MAGIC, 4, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_IMPORT - imports a shared file descriptor
+ *
+ * Takes an ion_fd_data struct with the fd field populated with a valid file
+ * descriptor obtained from ION_IOC_SHARE and returns the struct with the handle
+ * filed set to the corresponding opaque handle.
+ */
+#define ION_IOC_IMPORT		_IOWR(ION_IOC_MAGIC, 5, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_INVALIDATE - invalidate a shared file descriptors
+ *
+ * Deprecated in favor of using the dma_buf api's correctly (syncing
+ * will happend automatically when the buffer is mapped to a device).
+ * If necessary should be used after touching a cached buffer from the cpu,
+ * this will make the buffer in memory coherent.
+ */
+#define ION_IOC_INVALIDATE		_IOWR(ION_IOC_MAGIC, 8, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_SYNC - syncs a shared file descriptors to memory
+ *
+ * Deprecated in favor of using the dma_buf api's correctly (syncing
+ * will happend automatically when the buffer is mapped to a device).
+ * If necessary should be used after touching a cached buffer from the cpu,
+ * this will make the buffer in memory coherent.
+ */
+#define ION_IOC_SYNC		_IOWR(ION_IOC_MAGIC, 7, struct ion_fd_data)
+
+/**
+ * DOC: ION_IOC_CUSTOM - call architecture specific ion ioctl
+ *
+ * Takes the argument of the architecture specific ioctl to call and
+ * passes appropriate userdata for that ioctl
+ */
+#define ION_IOC_CUSTOM		_IOWR(ION_IOC_MAGIC, 6, struct ion_custom_data)
+
+#endif /* _LINUX_ION_H */
diff --git a/libmemoryheapion/scx15/kernel-headers/video/ion_sprd.h b/libmemoryheapion/scx15/kernel-headers/video/ion_sprd.h
new file mode 100644
index 0000000..82dfdcc
--- /dev/null
+++ b/libmemoryheapion/scx15/kernel-headers/video/ion_sprd.h
@@ -0,0 +1,99 @@
+/*
+ * Copyright (C) 2012 Spreadtrum Communications Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef	_ION_SPRD_H
+#define _ION_SPRD_H
+
+#define ION_HEAP_CMA_ID0        6
+#define ION_HEAP_CMA_ID1   	7
+#define ION_HEAP_CMA_ID2   	8
+#define ION_HEAP_CMA_ID3   	9
+
+#define ION_HEAP_IOMMU_ID0      10
+#define ION_HEAP_IOMMU_ID1   	11
+#define ION_HEAP_IOMMU_ID2   	12
+#define ION_HEAP_IOMMU_ID3   	13
+
+#ifdef ION_HEAP_CARVEOUT_MASK
+#undef ION_HEAP_CARVEOUT_MASK
+#endif
+#define ION_HEAP_CARVEOUT_MASK		(1 << ION_HEAP_CARVEOUT_TYPE)
+
+#define ION_HEAP_CARVEOUT_OVERLAY_MASK		(1 << ION_HEAP_CARVEOUT_OVERLAY_TYPE)
+
+
+#ifdef ION_HEAP_SYSTEM_MASK
+#undef ION_HEAP_SYSTEM_MASK
+#endif
+#define ION_HEAP_SYSTEM_MASK       (1 << 0)
+
+#define ION_HEAP_ID_SYSTEM	1
+#define ION_HEAP_ID_MM		2
+#define ION_HEAP_ID_OVERLAY	3
+#define ION_HEAP_CARVEOUT_TYPE   2
+#define ION_HEAP_CARVEOUT_OVERLAY_TYPE   3
+#define ION_HEAP_ID_MASK_SYSTEM 	(1<<ION_HEAP_ID_SYSTEM)
+#define ION_HEAP_ID_MASK_MM		(1<<ION_HEAP_ID_MM)
+#define ION_HEAP_ID_MASK_OVERLAY	(1<<ION_HEAP_ID_OVERLAY)
+
+#define ION_DRIVER_VERSION	1
+
+struct ion_phys_data {
+	int fd_buffer;
+	unsigned long phys;
+	size_t size;
+};
+
+struct ion_mmu_data {
+	int fd_buffer;
+	unsigned long iova_addr;
+	size_t iova_size;
+};
+
+struct ion_msync_data {
+	int fd_buffer;
+	void *vaddr;
+	void *paddr;
+	size_t size;
+};
+
+struct ion_map_data {
+	int fd_buffer;
+	unsigned long dev_addr;
+};
+
+struct ion_unmap_data {
+	int fd_buffer;
+};
+
+struct ion_fence_data {
+    int fence_fd;
+    char name[32];
+    unsigned long value;
+};
+
+enum ION_SPRD_CUSTOM_CMD {
+	ION_SPRD_CUSTOM_PHYS,
+	ION_SPRD_CUSTOM_MSYNC,
+
+	/* to get/free mmu iova */ //added by yfs
+	ION_SPRD_CUSTOM_GSP_MAP,
+	ION_SPRD_CUSTOM_GSP_UNMAP,
+	ION_SPRD_CUSTOM_MM_MAP,
+	ION_SPRD_CUSTOM_MM_UNMAP,
+        ION_SPRD_CUSTOM_FENCE_CREATE,
+        ION_SPRD_CUSTOM_FENCE_SIGNAL,
+        ION_SPRD_CUSTOM_FENCE_DUP,
+};
+
+#endif /* _ION_SPRD_H */
diff --git a/libstagefrighthw/scx15/Android.mk b/libstagefrighthw/scx15/Android.mk
index 35a62fb..321fa7b 100644
--- a/libstagefrighthw/scx15/Android.mk
+++ b/libstagefrighthw/scx15/Android.mk
@@ -27,26 +27,22 @@ LOCAL_SRC_FILES := \
 LOCAL_CFLAGS := \
 	$(PV_CFLAGS_MINUS_VISIBILITY) \
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	frameworks/native/include/media/openmax \
 	frameworks/native/include/media/hardware \
 	$(LOCAL_PATH)/include \
-	$(LOCAL_PATH)/../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
 
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../gralloc/scx15
 else
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
 
-LOCAL_C_INCLUDES := \
-	frameworks/native/include/media/openmax \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/include \
-	$(LOCAL_PATH)/../../gralloc/$(TARGET_BOARD_PLATFORM) \
+LOCAL_C_INCLUDES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video/ \
 
-endif
-
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
 	$(LOCAL_PATH)/include \
 
diff --git a/omx_components/video/avc_sprd/Android.mk b/omx_components/video/avc_sprd/Android.mk
index 4cd9e3c..7eb2f71 100644
--- a/omx_components/video/avc_sprd/Android.mk
+++ b/omx_components/video/avc_sprd/Android.mk
@@ -22,8 +22,6 @@ ifneq (,$(filter scx15 sc8830,$(TARGET_BOARD_PLATFORM)))
 include_makefiles := \
 	$(LOCAL_PATH)/thumbnail/Android.mk \
 
-# TODO Sync sc8830 and scx15 encoder codes
-
 ifeq (sc8830,$(TARGET_BOARD_PLATFORM))
 ifeq ($(SOC_SCX35),true)
 include_makefiles += $(call all-named-subdir-makefiles,scx15 sc8830/dec)
diff --git a/omx_components/video/avc_sprd/sc8830/dec/Android.mk b/omx_components/video/avc_sprd/sc8830/dec/Android.mk
index 3394d40..300ca83 100644
--- a/omx_components/video/avc_sprd/sc8830/dec/Android.mk
+++ b/omx_components/video/avc_sprd/sc8830/dec/Android.mk
@@ -5,32 +5,27 @@ include $(CLEAR_VARS)
 LOCAL_SRC_FILES := \
 	SPRDAVCDecoder.cpp \
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	frameworks/av/media/libstagefright/include \
 	frameworks/native/include/media/openmax \
 	frameworks/native/include/media/hardware \
 	frameworks/native/include/ui \
 	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video 
+	frameworks/native/include/media/hardware
 
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_CFLAGS += -DSOC_SCX35
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/scx15
 else
 
-LOCAL_C_INCLUDES := \
-	frameworks/av/media/libstagefright/include \
-	frameworks/native/include/media/openmax \
-	frameworks/native/include/media/hardware \
-	frameworks/native/include/ui \
-	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM) \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video 
-
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM)
 endif
 
+LOCAL_C_INCLUDES += \
+	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video 
+
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
 
diff --git a/omx_components/video/avc_sprd/sc8830/dec/SPRDAVCDecoder.cpp b/omx_components/video/avc_sprd/sc8830/dec/SPRDAVCDecoder.cpp
index fc29c81..354a098 100644
--- a/omx_components/video/avc_sprd/sc8830/dec/SPRDAVCDecoder.cpp
+++ b/omx_components/video/avc_sprd/sc8830/dec/SPRDAVCDecoder.cpp
@@ -388,7 +388,11 @@ status_t SPRDAVCDecoder::initDecoder() {
     video_format.p_extra = NULL;
     video_format.p_extra_phy = 0;
     video_format.i_extra = 0;
+#ifdef SOC_SCX35
+    video_format.uv_interleaved = 1;
+#else
     video_format.yuv_format = YUV420SP_NV12;
+#endif
 
     if ((*mH264DecInit)(mHandle, &codec_buf,&video_format) != MMDEC_OK) {
         ALOGE("Failed to init AVCDEC");
@@ -1062,7 +1066,7 @@ void SPRDAVCDecoder::onQueueFilled(OMX_U32 portIndex) {
         MMDecRet ret;
         ret = (*mH264DecGetInfo)(mHandle, &decoderInfo);
         if(ret == MMDEC_OK) {
-#if 0
+#if SOC_SCX35
             if (!((decoderInfo.picWidth<= mMaxWidth&& decoderInfo.picHeight<= mMaxHeight)
                     || (decoderInfo.picWidth <= mMaxHeight && decoderInfo.picHeight <= mMaxWidth))) {
                 ALOGE("[%d,%d] is out of range [%d, %d], failed to support this format.",
diff --git a/omx_components/video/avc_sprd/sc8830/dec/avc_dec_api.h b/omx_components/video/avc_sprd/sc8830/dec/avc_dec_api.h
index 5c7992e..5946071 100644
--- a/omx_components/video/avc_sprd/sc8830/dec/avc_dec_api.h
+++ b/omx_components/video/avc_sprd/sc8830/dec/avc_dec_api.h
@@ -64,6 +64,7 @@ typedef enum {
     RV9
 } VIDEO_STANDARD_E;
 
+#ifndef SOC_SCX35
 typedef enum
 {
     YUV420P_YU12 = 0,
@@ -71,6 +72,7 @@ typedef enum
     YUV420SP_NV12 = 2,   /*u/v interleaved*/
     YUV420SP_NV21 = 3,   /*v/u interleaved*/
 } MM_YUV_FORMAT_E;
+#endif
 
 // decoder video format structure
 typedef struct
@@ -81,7 +83,11 @@ typedef struct
     int32	i_extra;
     void 	*p_extra;
     uint32	p_extra_phy;
+#ifdef SOC_SCX35
+    int32	uv_interleaved;
+#else
     int32	yuv_format;
+#endif
 } MMDecVideoFormat;
 
 // Decoder buffer for decoding structure
diff --git a/omx_components/video/avc_sprd/scx15/enc/Android.mk b/omx_components/video/avc_sprd/scx15/enc/Android.mk
index 36ec31c..578b060 100644
--- a/omx_components/video/avc_sprd/scx15/enc/Android.mk
+++ b/omx_components/video/avc_sprd/scx15/enc/Android.mk
@@ -5,26 +5,23 @@ include $(CLEAR_VARS)
 LOCAL_SRC_FILES := \
 	SPRDAVCEncoder.cpp \
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	frameworks/av/media/libstagefright/include \
 	frameworks/native/include/media/openmax \
 	frameworks/native/include/media/hardware \
-	frameworks/native/include \
-	$(LOCAL_PATH)/../../../../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
+	frameworks/native/include
+
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/scx15
 
 else
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
 
-LOCAL_C_INCLUDES := \
-	frameworks/av/media/libstagefright/include \
-	frameworks/native/include/media/openmax \
-	frameworks/native/include/media/hardware \
-	frameworks/native/include \
-	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM) \
+LOCAL_C_INCLUDES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
-endif
 
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
diff --git a/omx_components/video/m4v_h263_sprd/sc8830/dec/Android.mk b/omx_components/video/m4v_h263_sprd/sc8830/dec/Android.mk
index f6be67a..930632b 100644
--- a/omx_components/video/m4v_h263_sprd/sc8830/dec/Android.mk
+++ b/omx_components/video/m4v_h263_sprd/sc8830/dec/Android.mk
@@ -5,32 +5,26 @@ include $(CLEAR_VARS)
 LOCAL_SRC_FILES := \
 	SPRDMPEG4Decoder.cpp
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	frameworks/av/media/libstagefright/include \
 	frameworks/native/include/media/openmax \
 	frameworks/native/include/media/hardware \
 	frameworks/native/include/ui \
 	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
+	frameworks/native/include/media/hardware
 
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_CFLAGS += -DSOC_SCX35
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/scx15
 else
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
 
-LOCAL_C_INCLUDES := \
-	frameworks/av/media/libstagefright/include \
-	frameworks/native/include/media/openmax \
-	frameworks/native/include/media/hardware \
-	frameworks/native/include/ui \
-	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM) \
+LOCAL_C_INCLUDES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
 
-endif
-
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
 
diff --git a/omx_components/video/m4v_h263_sprd/sc8830/dec/SPRDMPEG4Decoder.cpp b/omx_components/video/m4v_h263_sprd/sc8830/dec/SPRDMPEG4Decoder.cpp
index eabfab9..dc59978 100644
--- a/omx_components/video/m4v_h263_sprd/sc8830/dec/SPRDMPEG4Decoder.cpp
+++ b/omx_components/video/m4v_h263_sprd/sc8830/dec/SPRDMPEG4Decoder.cpp
@@ -300,7 +300,11 @@ void SPRDMPEG4Decoder::change_ddr_freq()
         }
         else if(frame_size > 320*240)
         {
+#ifdef SOC_SCX35
+            ddr_freq = "300000";
+#else
             ddr_freq = "200000";
+#endif
         }
 #endif
         else
diff --git a/omx_components/video/m4v_h263_sprd/sc8830/enc/Android.mk b/omx_components/video/m4v_h263_sprd/sc8830/enc/Android.mk
index 5103087..d520e1f 100644
--- a/omx_components/video/m4v_h263_sprd/sc8830/enc/Android.mk
+++ b/omx_components/video/m4v_h263_sprd/sc8830/enc/Android.mk
@@ -39,4 +39,8 @@ ifeq ($(strip $(TARGET_BOARD_CAMERA_ANTI_SHAKE)),true)
 LOCAL_CFLAGS += -DANTI_SHAKE
 endif
 
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_CFLAGS += -DSOC_SCX35
+endif
+
 include $(BUILD_SHARED_LIBRARY)
diff --git a/omx_components/video/m4v_h263_sprd/sc8830/enc/SPRDMPEG4Encoder.cpp b/omx_components/video/m4v_h263_sprd/sc8830/enc/SPRDMPEG4Encoder.cpp
index 27068ec..bd98053 100644
--- a/omx_components/video/m4v_h263_sprd/sc8830/enc/SPRDMPEG4Encoder.cpp
+++ b/omx_components/video/m4v_h263_sprd/sc8830/enc/SPRDMPEG4Encoder.cpp
@@ -322,7 +322,11 @@ OMX_ERRORTYPE SPRDMPEG4Encoder::initEncParams() {
     mEncInfo.is_h263 = mIsH263;
     mEncInfo.frame_width = mVideoWidth;
     mEncInfo.frame_height = mVideoHeight;
+#ifdef SOC_SCX35
+    mEncInfo.uv_interleaved = 1;
+#else
     mEncInfo.yuv_format = MMENC_YUV420SP_NV21;
+#endif
     mEncInfo.time_scale = 1000;
 #ifdef ANTI_SHAKE
     mEncInfo.b_anti_shake = 1;
diff --git a/omx_components/video/m4v_h263_sprd/sc8830/enc/m4v_h263_enc_api.h b/omx_components/video/m4v_h263_sprd/sc8830/enc/m4v_h263_enc_api.h
index f375faa..a262508 100644
--- a/omx_components/video/m4v_h263_sprd/sc8830/enc/m4v_h263_enc_api.h
+++ b/omx_components/video/m4v_h263_sprd/sc8830/enc/m4v_h263_enc_api.h
@@ -82,7 +82,7 @@ typedef struct
 
 typedef MMCodecBuffer MMEncBuffer;
 
-
+#ifndef SOC_SCX35
 typedef enum
 {
     MMENC_YUV420P_YU12 = 0,
@@ -90,6 +90,7 @@ typedef enum
     MMENC_YUV420SP_NV12 = 2,   /*u/v interleaved*/
     MMENC_YUV420SP_NV21 = 3,   /*v/u interleaved*/
 } MMENC_YUV_FORMAT_E;
+#endif
 
 // Encoder video format structure
 typedef struct
@@ -98,7 +99,11 @@ typedef struct
     int32	frame_width;				//frame width
     int32	frame_height;				//frame Height
     int32	time_scale;
+#ifdef SOC_SCX35
+    int32	uv_interleaved;				//tmp add
+#else
     int32	yuv_format;
+#endif
     int32	b_anti_shake;
 } MMEncVideoInfo;
 
diff --git a/omx_components/video/vpx_sprd/sc8830/dec/Android.mk b/omx_components/video/vpx_sprd/sc8830/dec/Android.mk
index 542daae..88144b5 100644
--- a/omx_components/video/vpx_sprd/sc8830/dec/Android.mk
+++ b/omx_components/video/vpx_sprd/sc8830/dec/Android.mk
@@ -5,32 +5,25 @@ include $(CLEAR_VARS)
 LOCAL_SRC_FILES := \
 	SPRDVPXDecoder.cpp
 
-ifeq ($(strip $(SOC_SCX35)),true)
-
 LOCAL_C_INCLUDES := \
 	frameworks/av/media/libstagefright/include \
 	frameworks/native/include/media/openmax \
 	frameworks/native/include/media/hardware \
 	frameworks/native/include/ui \
 	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/scx15 \
-	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
+	frameworks/native/include/media/hardware
 
+ifeq ($(strip $(SOC_SCX35)),true)
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/scx15
 else
+LOCAL_C_INCLUDES += \
+	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM)
+endif
 
-LOCAL_C_INCLUDES := \
-	frameworks/av/media/libstagefright/include \
-	frameworks/native/include/media/openmax \
-	frameworks/native/include/media/hardware \
-	frameworks/native/include/ui \
-	frameworks/native/include/utils \
-	frameworks/native/include/media/hardware \
-	$(LOCAL_PATH)/../../../../../gralloc/$(TARGET_BOARD_PLATFORM) \
+LOCAL_C_INCLUDES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr/include/video
 
-endif
-
 LOCAL_ADDITIONAL_DEPENDENCIES += \
 	$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ/usr
 
-- 
2.18.0

